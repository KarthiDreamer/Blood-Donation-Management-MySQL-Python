# from DB.db_creation import db_creation_connection
from db_creation import db_creation_connection

def create_db_table():

    connection = db_creation_connection()

    database_name = 'autogenerated_blood_donation'
    cursor = connection.cursor()
    # Check if the database exists and if not, create it
    cursor.execute("SHOW DATABASES LIKE '{}'".format(database_name)) 
    database_exists = cursor.fetchone()

    if not database_exists:
        cursor.execute("CREATE DATABASE {}".format(database_name))
        print("Database created successfully!")

    cursor.execute("USE autogenerated_blood_donation;")

    cursor.execute("SHOW TABLES LIKE 'hospital'")
    hospital_exists = cursor.fetchone()

    if not hospital_exists:
        cursor.execute(
            """ CREATE TABLE hospital (
                    hid INT NOT NULL ,
                    hname VARCHAR(30) NOT NULL,
                    password VARCHAR(30) NOT NULL,
                    total_capacity INT NOT NULL,
                    quantity_required INT NOT NULL,
                    contact_no BIGINT NOT NULL,
                    street_name VARCHAR(50) NOT NULL,
                    city VARCHAR(30) NOT NULL,
                    district VARCHAR(30) NOT NULL,
                    state VARCHAR(30) NOT NULL,
                    country VARCHAR(30) NOT NULL,
                    o_plus_available INT NOT NULL,
                    a_plus_available INT NOT NULL,
                    b_plus_available INT NOT NULL,
                    ab_plus_available INT NOT NULL,
                    o_minus_available INT NOT NULL,
                    a_minus_available INT NOT NULL,
                    b_minus_available INT NOT NULL,
                    ab_minus_available INT NOT NULL,
                    o_plus_maximum INT NOT NULL,
                    a_plus_maximum INT NOT NULL,
                    b_plus_maximum INT NOT NULL,
                    ab_plus_maximum INT NOT NULL,
                    o_minus_maximum INT NOT NULL,
                    a_minus_maximum INT NOT NULL,
                    b_minus_maximum INT NOT NULL,
                    ab_minus_maximum INT NOT NULL,
                    PRIMARY KEY (hid)
                    );
            """ 
        )
        print("Hospital table created successfully!")


    # Check if the table exists
    cursor.execute("SHOW TABLES LIKE 'donor'")
    donor_exists = cursor.fetchone()

    if not donor_exists:
        cursor.execute(
            """ CREATE TABLE donor (
                    aadhaar_id bigint NOT NULL PRIMARY KEY,
                    gender varchar(30) NOT NULL,
                    first_name varchar(30) NOT NULL,
                    lname_name varchar(30),
                    dob INT NOT NULL,
                    mob INT NOT NULL,
                    yob INT NOT NULL,
                    blood_type varchar(3) NOT NULL,
                    pregnancy_status BOOL NOT NULL,
                    HIV BOOL NOT NULL,
                    street_name varchar(30) NOT NULL,
                    city varchar(30) NOT NULL,
                    district varchar(30) NOT NULL,
                    state varchar(30) NOT NULL,
                    country varchar(30) NOT NULL,
                    country_code varchar(3) NOT NULL,
                    password varchar(30) NOT NULL,
                    father_name varchar(30),
                    mother_name varchar(30),
                    gaurdian_name varchar(30),
                    ph1 bigint NOT NULL,
                    ph2 bigint,
                    hid int NOT NULL,
                    FOREIGN KEY ( hid) REFERENCES hospital(hid)
                );
            """ 
        )
        print("Donor table created successfully!")


    cursor.execute("SHOW TABLES LIKE 'admin'")
    admin_exists = cursor.fetchone()

    if not admin_exists:
        cursor.execute(
            """ 
                CREATE TABLE admin (
                    admin_name varchar(50),
                    admin_id INT NOT NULL,
                    password VARCHAR(30) NOT NULL,
                    PRIMARY KEY (admin_id)
                    );
            """ 
        )
        print("Admin table created successfully!")

    cursor.execute("SHOW TABLES LIKE 'reports'")
    reports_exists = cursor.fetchone()

    if not reports_exists:
        cursor.execute(
            """ 
                CREATE TABLE reports (
                    date DATE NOT NULL,
                    time TIME NOT NULL,
                    no_units_donated INT NOT NULL,
                    hid INT NOT NULL, 
                    aadhaar_id bigint NOT NULL,
                    FOREIGN KEY (aadhaar_id) REFERENCES donor(aadhaar_id),
                    FOREIGN KEY (hid) REFERENCES hospital(hid)
                    );
            """
        )
        print("Reports table created successfully!") 
        
create_db_table()
print("code execution successful!")